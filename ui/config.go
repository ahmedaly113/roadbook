package ui

import (
	"bytes"
	"encoding/base64"
	"image"
	"image/png"
	"time"

	"github.com/veandco/go-sdl2/sdl"
	"github.com/veandco/go-sdl2/ttf"
)

// global drawing constants
const (
	screenHeight = 1024
	screenWidth  = 768
	fps          = 5
)

// layout constants
const (
	instrumentHeight = 256 // x 1
	waypointHeight   = 256 // x 3
	TulipHeight		 = 240
	NotesHeight		 = 240
	dividerHeight    = 2
	columnWidth      = 256
)

var frameDuration = time.Second / time.Duration(fps)
var fullScreenRect = &sdl.Rect{0, 0, screenWidth, screenHeight}
var dinMedium144, dinMedium40 *ttf.Font

// TODO: figure out how to ask SDL
var literalTulipSurface *sdl.Surface
var literalTulip []byte
var literalTulipNative image.Image

const likeLiterallyATulip = `iVBORw0KGgoAAAANSUhEUgAAADIAAABUCAYAAADAkmT2AAAAAXNSR0IArs4c6QAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAC4jAAAuIwF4pT92AAABWWlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNS40LjAiPgogICA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogICAgICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgICAgICAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyI+CiAgICAgICAgIDx0aWZmOk9yaWVudGF0aW9uPjE8L3RpZmY6T3JpZW50YXRpb24+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgpMwidZAAATxUlEQVR4Ac2bCayc1XXHZ+bN8wo2q42xWYvDFkLYGjVQbArEsiLaEhdqCi2QxkAUEUUB1IZSYRrROGFxKwotFAQtFZWAsEeEkgYTWsdlCcIUbGoWYwwGjPGGt/dm6e933nemY4PXGUivdN/9vruce/73bPfeb175iSeeqJ500km1F1544d6VK1d+qVwuz+7r67vt5JNP/rcS6e233/7y66+//sPly5cP6e3tfaJarf7dqaeeuqjZbPbQt26f/w+pnEy8/PLLK2F2BMyWYLD00Ucf3TN69OgZPP8UgHvSVtppp51K/f399Z6enhMnTJgwOxchafw6Sha0fNVVV/WUn3/++e81Go2JVEyE4eqQIUPq5Mrq1at7xo0bV/rwww9Lb7zxRg3mK9T3jxgxYvCGDRuW7bHHHgcdddRRK6ZPn14hN35NICosdMwt48cPGjToK8uWLaux4pVddtmlIvOkAIRkSrVarVqv10uo1WDA9u2888670+d6+nwdyVQoP3Mgd999d6j2s88+O3LevHnfrgwfPnz+sGHDSqNGjWquX79elSqtXbu2tPfee/cAQBChfkishO2U6DMINWsilfMff/zxQ7Uv2gTzmSW14Mwzzwz7nD179tPY8PBqpVJZMnLkyNK7777ripeQTAlwJcEBqozahc3IpVLxnbJGn16AfYPqS+65554qZZ99Pu2kTZCaznPdddf9FNv+HNL56wpqtdjVtoOANGgznV39KH02CcSsqq1YscLyQlZkLKvT91lJ5cILL3TRmrfddtsPsN1JOJ9foOarVIkjZFJmsZeQhNJw5elkUwmpCTRyAaQMyBoebjiS/Ef7IJWWB/T900g333xz7y233NJ/7733TnnxxRf//LXXXivttddes51Lq/+8DMssnqmk+zUX9hH8CDJVLKXCmCorUUOikyF8jjrrRJ8GAGlq3EijH+Pel/wvTz75pHZcQouesF0go2SaxGM5QAgogSiJBOKzKcEgFd20TuDG++67b5QTaYjRqYt/mLecxv3II4/8eO7cuUN23XXXJiBWHn300c85lZPu6mqTQjU0+GQ8Gc4637PNMYCtrFu3rh+VHEH5fYmMGTOmx7KbqbCL0vXXX/+3eKhjmWsdKqVNzz3llFOWMVdFiQxzUhnM0pWX+Xbb8FnmbbPMDJgwfKQyDRUbr1To0zWpIOGqdnHnnXdOxCa+zZapPnjw4Opuu+1WIp49Lc/0qVSZdKjMkcHyf2DSZhKM6mY/AViXdkXpoH4cRC8LdQXP586aNUsgHQfJgqfQe9TpHxYtWhSqj11W2GGUUK//YJ5ITjgimbNGJrOUebN1gkwwtico1Q1p9K5atarJ85889NBDhxskNc4g1MGfVKkZM2Zc/v777x9MEO6HF0H0IJUN+++//7MF+YaqpV82DYhj4DmYThAJTjBmgVsKwqRj4LluP6L+X1hHoNqInnXbk1QXVeqxxx7bZ+HChVe+9957zlkFQANJGCpeYsEWQ7NM34bLv1YG6KRuBYNO6LNu2DazoKzzOYEolczaCh7MrctZd9111xcg3pFUBCIfTz311I9w84N47Gf+8tChQxsGbACFWtEvJF+BkVUFkwEkGZMIuhhGn5JJByAgwZiUSr4Dxi1+ac2aNZfZtqNSKdSyduONN56wZMmSqSyQou+FeQGULdkiPekcmdolEnUCkTGzEpExc4JIUAnEMiVE2VPElan333///kolVzYn3JaSmBEBa/78+TOQhnM3nRcATbL7ww377rvvMwWtWFGBrLATjDdVG1MymVHe9gSQamY/QZvSVijdZPYjySq2coFt2xtXAK7NNq644orfh8bxboWgKfPaRcPtE/RfnDRp0lv0C/twHtor78kkqWUjqV7Wt6tXglFaPqf0BG62nrLHYwCe7Dw2lEOLuLLNhg+Q8CCo1HRUVAYhWw6NYGEb7syxkcdl+IILLkhHFUAWqTbJlIMSiKugPrarmHVm+5lyXEqFqgqxpQbNMexO/8A+xJVtcsWFNJqXX375VJzGkSyGZ52e5IPF0+2Wxo4d+2PpEtVbsUpjX1CsbqiWg9qTO+J2IPYVuEkwKQnfEww03R2XCJDTrGeD15rQ982llAZHhMuVqnScq5BIjUjuQfAXp59+uvur1uFKevBdmWcc8NkBZghElklBqF4CEGTmBOPABGNpZrzq1UQyv40H+iIMNrYWIOnj6jQ5LJ3B2COUKrz0yItzy4PnJWLIdc5J/41WvMLE8xnYB4OKv2UndhaUjCtOGU8Q1kvcnMkJrS+ACMYLC13xH9oHw91o4hyXJYyFbSxevPjPuBewuux8JkDUsYsqizrvvPPOe8g6+sfq+2yqgPBNGHiVQON7APEhGZI5pSIQGfPdbEpggrB/thWgKuh5ifwV+2L0G01sXSaYCmlce+21k3G3x6Ci9g3bKOZvKA3APOAYjPxj556ATOc5BZBGMukAGTIJIMGkZKzLnAAEY0ogGKuby6PZFR9iNQx/olSoj4kWLlx4qZcf7XScj7l7LLGRn0i/3ch9NyWQxwZeB9TJZ5kxS1SGE4BM+640fLb03WRfx1jHs2Kr6Sww/C/bXlwd+dhKhe3Ur7nmmt9i4/k7AG9Ag+kGjBy1MnZUALPw3HPPjW07AfNjziOAMPHPWQm3KiFiGdQDZZnMJhi5sC2z7fm8SRs8xYJ8vsX5Jg833XRT6Cmu+lI9FXQa0ssET3XVivwYbZ5Ag8dsz7LitSfb4g/o9Ciik1Cd3HKl6VJTCpYJKCe0f4KR8XxXKkoJrzjGCT1nt6czzjijhxhT4+R3BNL4GtIQeHgqx0mT+cpKFbcbQbB9fPtzZeLEiaGfELi1YBo+NvI+oTLpgpPJZNx3k2U+JxPWCwwgg30+7LDDBozOF9LSpUtjMAemSwGhLRgAITMwvwumfUhD1XLMpjSsMxk76g7mLvdnuMpfYfQsQk+4QuOLDOt9IBS+3PfMTmg2tZcCaa/j/SPf23fDqEhFadxxxx2/gbs9RyAsZNWxSRcgGku8w1d4PaS40WLERPxJZQxrhcAPZJgy9FTiMk2EDlXz2fZUrXbmJZjvrqDP5NwtvG47G8gB1Dw//PDDMSc73O/g3SosXj9AypQx1pK5ymTINUvsqkOqm7s/CyBMGPe3u++++73o6pPYTK+Ec3VUOepbgTHBOJngCqZbzzLtWBjocTHw/7OsI2aFqJTGc8891//ggw+O5or2/GKhqsUOI9QxF4thAYQ+I6WxuZQSad0UMmoaKtaAkEGnIXGJes6QOeON74LInEAsE5hjAVxh/BtTp059SgbSbb7zzjshjWeeeeabSGN4sWgMH1BVJSBt3ym9C/AeepQ02tXT90wtIF6AcYPXy638Apj5OtKR8YZBTeYEURxyAohg2hlPJrIOZsL78f4IuY4Uwm1SX/YsDphhbFsu1OWSApg046UAoeQF4mIyblw0buZPC4jtxx57rP6viuH/E1KZyRerKiLtc0WcxKhr1oP5bhZkrl4bmAYq1QuTDdTU7yimUCu/LvnCJfQfs0h7Maaf19iwSsskgFRf+AlVg4fdbGMBWnbme6aNgBSV4cUA8V281UNchA2CyIZkWqmY9O1ObH0C8Z1cR3pN7MIgdvH555+/cDrSIKd9hEf84IMPvqU0GOtRImgmEBfKnAujROBlRXTazJ+PAWGwVAM1n95+DyJPEygHM9kG2hq6Yq9mXLGMLQIxq4qM7SF49dD2vYsuuugmgx4gwnUKiPbm1VdfPZltyxEskMfY1lZdGi6MtAVhKS8ChY83feHieovu1z6tJMMMDhU48MADJ6ACs1GRwTCnm6zj92votwcdz+d1J3dM0b4KaU1htztDELjLkIDEARJMMPZbrrKMq7bJdJbQSdWyvydOP3cskMZLL7207UAcAFFVzO9064mmxwPmKqrfw4X2aDtIxtXt9R01quPNKqzyGp6PmjZt2n1utTcBofTrt99++yGM/aonSKVBXTCdUhCEC+MZSKDM77gVSOJ1+7LJDBX1uT0NuIn2mrbnAoyG2DjyyCOnv/XWWz9kc3ci7+OdkCNpgwl/l8PQpDlz5rjlqGFToct4plCnJFe43AZ9vqEUYJKF7u+F1kZOI6UhMProNFTTV9n5eutO94HPbkk3yy0CsRMDVbPyLC4Q9tlnn3VUueVvbfsXLFhwG7eBS7hk3hVVG3nIIYccTPsvUatKSsTxJD3icK55ztHzYdhhG9THytMWgFIiheE3ACOQ56Gparbszff2tFUgdmYy9TI2dDBX2XPPPcMZcBCqjh8/fj1niZ8ffPDBU1555ZUSUvsifX+ZG0LHFy63xqeBr6Gio6FXo4y5i5WP+2OfBQLvkRlK1/gk+F/S2VLaJiBJoADUbrzRhCP4d2xlilsNdgDHU/n3SDCHuZKh16jgnxbSKKeRaw+uvjmlUYDzHrkK4BLf/v+zIPaJ9mHbx9xva/ZteMgtNbuAOZ5lXEmM+DdVJYZrI94EOkeD4+7heKsJMEdzM2KH/QuP11KrlAZgVCsBvnDxxRfPL2h9OkCwgyA8ZcqUV4gdS/yKRJA7iL2VZ3QlUc59FWeOP3J1STWkEaqpFFIiSqGQRJZxf0Ddww5qv1X0fdPUkUQKVdOrrQXIfNyyEikD5ktOJAj3VUoAmzmTbU8YuW3qfrHi8ZxXToJBxZRaqBV7v/vsjzQ3Kw3bOwIigUJ19Ptz3WiiOuYTbKMu6HMunwDAg5BEnUDojtjmWHkBKRkBCKawEzcJ3mv96pJLLtFjldMDxsBP+NMxkKRJNP9v91cmgBxjecMNN8QqcuaYanSWO1JE87QP+6leKR33cDxHP6T8r7ZvTa3s0zGQNHgmfcUV9cYDFTrosssu2wv6/bjjoXiyr6ZaKQ3ByHgyL5BCpazzxz3+zqWPmHS3TBLVW57S909KHQPhoBN7H4C8iSr0CQRmd+Iz8uec8IEHHpiIRo3lsaVWaeRpJ4IQlCV18S0S6T7KGWlRsencon04T8dArrzyygBy3HHHvY9avE88ifMD2/1DnYBtzBS9FcbbAFBIIwEIKEEpFbNtJmLHrZaHH374QIUvW0gdA2FigZQPOOCA9RjqO9qJqoNdHOS8BMBJBkrq4vdftiUA21PFlAb1ccsIzQUcAeJ6dHpxuW3fLaWOgUh84sSJuYt9SyDaCsY9FrXyzDEOVVMa3vzHircbdz4X0oiPqewUbnWBih/phMS3BMK2bgGJeZDIYi8nTDA/hr3XGUUQjEuMlIZSQNUCVEoEIE3aewG8+tBDD71dGnirAT/ty1bSdu21tkJL1Xi7UBGvfg5DrfYzrpBCGsm8q696tYGwjxfevSzGP5944olLlQZS8Ty/TakrEsmZYPBdAxqnuX5c7igM/QAYdqUrGrpJ5mGw9VzUeeUTN3H77bff31iHNLbqcoNI8acrQDKWsKJLlYinRYy9SeyIgwhqFtOlFHzx2SRwwNWwCy/y7uBnGa9i4FXAbtXlBoHiT1dVCyDLZBCJuL0oC0B1SiDOabt1lkoH4BqztuHp8q8KvrYLhGO6AiSDIqu73JWEuQobR88T/nakxXiqlKV2YibV2KNpDzMnT568UNvw27wN25O6oloZFPlV20pArJF53bDxI6XRbhtKowDT0MBx1UuJQ9+X8e3xVO1AuwIkCcLMR6zyKuMIW5amF3Aaebsk7JsSAVydCO5l3xUnnHDC6sJTbVPcyDmz7AoQGIvJvZyAuRWFwbt5bO10c0LtQ5VijPdi2sYzZ5999i3i2xGVSrpdAVIQC1owuFxPxCo3i2DY8lD2UxoCp0+PKki8+ab13Fd1xEtHg2UgE7vUCA6s9ocyiGTit/aqVtqHz4V91DhN+m3wR/4cQ5Xya0DS2pGya0BylwqQZaqWzCcImffZTHBsqFKkRcccc8xfyvSOGng74K4BSaIwPVQgGjw8R7VA9F5mwDQ82+NyvwP4Pr8qq2o5fkfLrsQRJ59e3LgTO76gHQAmPk3b5rtHXWymxuVeFYn8hJuX+z00+YtU+3SauiIRQASdmTNnjoHZ/ZUAxuyldkhBySCNuHBjK1LHu31XxgHSKf+t8V0Bwl4rDJ1VPxCmhwHE6B512oXSAFTdey+Owo/yW5L/AXy1UwNvoeChK0DyAyVMj3f1MXi/lYSdaBfW8VW4SeTXLf+snYFuPXcFSDKDfYw3dgCiCcOxs/VdiRAIq0UUj3vc3DHn2E7Lrhj7rOLCmpU/wNUnlZWILliJAKbBjaE/41tC+bIdsI/t3uE6bnOpW0CCKVZ+nB6K1acY+AZYqFaDH1RWcMkvnHbaaWv1VrR3FAA3BdQN1dKo42MQNjJaiSAJf3oRUdx3PZaGjpTmyADbkm7MuxGWjgm6CTRxNzsCILvppUwCMdvO6vvDMX8BF0A292U2Bu7gn46B8DUq3CxeaRcYjn/hoIy6wl78ObiqtA7XO7fgs6v2Ic2OgeQCcogaweoPfA+oDlxKu01BQn4w9fj7MtF8Cf1bPwPPsd0oOwbCd+9YfYLgkEIQrd/Y+659CAQbmSfDBMK4zOsG8+00OgaSxFAjBNLa+8XvrtL9ah9IpCt7qpxv07JjIOxgk3s/DobHAoB3WXESLAKk9cM3nbyb7x0DSWZgdA1AaqiYqia4yN6mFAetmKvbET3n7xhI3qCw/ViFTaxXjQDld0V/oF/m3F71RgWQ4ZdzX5YMdKvsGIgGbTrrrLNWEPAWwnAfarUSb7WKSL+acjmABPdut5j+JDr/CyK1GuTYHOa5AAAAAElFTkSuQmCC`

func init() {
	b, err := base64.StdEncoding.DecodeString(likeLiterallyATulip)
	if err != nil {
		panic(err)
	}
	literalTulip = b

	p, err := png.Decode(bytes.NewBuffer(b))
	if err != nil {
		panic(err)
	}
	literalTulipNative = p
}
